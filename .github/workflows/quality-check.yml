# .github/workflows/remove_eternalxlks.yml
name: Quality Check

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to the main branch

jobs:
  scan-and-clean:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Find Swear Words
        run: |
          if grep -rl "eternalxlks" profile/README.md; then
            perl -i -pe 's{eternalxlks}{.}g' profile/README.md
          fi
          if grep -rl "Jotaro Kujo" profile/README.md; then
            perl -i -pe 's{Jotaro Kujo}{.}g' profile/README.md
          fi
          if grep -rl "855840927564" profile/README.md; then
            perl -i -pe 's{855840927564}{.}g' profile/README.md
          fi
          if grep -rl "brunozhon" profile/README.md; then
            perl -i -pe 's{brunozhon}{Brunozhon}g' profile/README.md
          fi
          if grep -rl "useless" profile/README.md; then
            perl -i -pe 's{useless}{useful}g' profile/README.md
          fi

      - name: Remove Swear Words (if any)
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
            if [ -n "$(git status --porcelain)" ]; then
              git config user.name "Brunozhon"
              git config user.email "69879040+Brunozhon@users.noreply.github.com"
              git commit -am "Remove swear words"
              git push https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }} HEAD:main
            else
              echo "No changes to commit."
            fi

      - name: Create GitHub Issue
        uses: actions/github-script@v6
        if: ${{ failure() }} 
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            const title = "Permission Issue: Action Bot";
            let body = "The bot cannot perform its task because it lacks write permissions. Please grant the necessary access to resolve this issue.";
            await github.rest.issues.create({
              owner,
              repo,
              title,
              body,
            });
